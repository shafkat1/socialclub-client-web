name: Frontend Deploy

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/**'
      - 'package.json'
      - 'vite.config.ts'
      - '.github/workflows/frontend-deploy.yml'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Determine S3 bucket
        id: bucket
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "bucket=${{ secrets.AWS_S3_PRODUCTION_BUCKET }}" >> $GITHUB_OUTPUT
            echo "distribution=${{ secrets.AWS_CLOUDFRONT_PRODUCTION_ID }}" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "bucket=${{ secrets.AWS_S3_STAGING_BUCKET }}" >> $GITHUB_OUTPUT
            echo "distribution=${{ secrets.AWS_CLOUDFRONT_STAGING_ID }}" >> $GITHUB_OUTPUT
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi

      - name: Upload to S3
        if: steps.bucket.outputs.bucket != ''
        run: |
          aws s3 sync dist/ s3://${{ steps.bucket.outputs.bucket }}/ \
            --delete \
            --cache-control "max-age=31536000" \
            --exclude "index.html"
          
          aws s3 cp dist/index.html s3://${{ steps.bucket.outputs.bucket }}/index.html \
            --cache-control "max-age=0,no-cache,no-store,must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront
        if: steps.bucket.outputs.distribution != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.bucket.outputs.distribution }} \
            --paths "/*"

      - name: Deployment Summary
        run: |
          echo "âœ… Frontend build complete"
          echo "Environment: ${{ steps.bucket.outputs.environment }}"
          echo "S3 Bucket: ${{ steps.bucket.outputs.bucket }}"
          echo "CloudFront: ${{ steps.bucket.outputs.distribution }}"
